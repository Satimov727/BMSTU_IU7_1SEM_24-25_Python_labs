# –õ–∏–º–∞—Ä–µ–≤ –°—Ç–µ–ø–∞–Ω –ò–£7-11–ë. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã—á–∏—Å–ª—è–µ—Ç –ø—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞ –∏–∑–≤–µ—Å—Ç–Ω–æ–π, –∑–∞–¥–∞–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ, —Ñ—É–Ω–∫—Ü–∏–∏ –¥–≤—É–º—è —Ä–∞–∑–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ (–ø–æ –≤–∞—Ä–∏–∞–Ω—Ç—É).
# –î–∞–ª–µ–µ —Å—Ç—Ä–æ–∏—Ç—Å—è —Ç–∞–±–ª–∏—Ü–∞ —Å –Ω–∞—á–∞–ª–æ–º –∏ –∫–æ–Ω—Ü–æ–º –æ—Ç—Ä–µ–∑–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ N1 –∏ N2 - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è.
# –î–∞–ª–µ–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–π, –∑–∞–¥–∞–Ω–Ω–æ–π –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ, –ø–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω–æ–π –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–æ–π –º–µ—Ç–æ–¥ —è–≤–ª—è–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º. –î–ª—è —ç—Ç–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤—ã—á–∏—Å–ª–∏—Ç—å –∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å
# –∞–±—Å–æ–ª—é—Ç–Ω—É—é –∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—É—é –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–≥–æ –∏–∑ —á–µ—Ç—ã—Ä—ë—Ö –∏–∑–º–µ—Ä–µ–Ω–∏–π. –ú–µ—Ç–æ–¥, –∏–∑–º–µ—Ä–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å –æ–¥–Ω–∏–º –∏–∑ —Ä–∞–∑–±–∏–µ–Ω–∏–π –¥–∞–ª–æ —Å–∞–º–æ–µ –±–ª–∏–∑–∫–æ–µ –∫ –ø–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω–æ–π
# –∑–Ω–∞—á–µ–Ω–∏–µ, —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º. –ó–∞—Ç–µ–º –¥–ª—è –¥—Ä—É–≥–æ–≥–æ, –º–µ–Ω–µ–µ —Ç–æ—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞, –∏—Ç–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤
# —Ä–∞–∑–±–∏–µ–Ω–∏—è, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –∏–Ω—Ç–µ–≥—Ä–∞–ª –±—É–¥–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω —Å –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é, –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–æ—Ä–º—É–ª—ã: | ùêº(ùëÅ) ‚àí ùêº(2ùëÅ) | < Œµ.
# –í—ã–≤–µ—Å—Ç–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Ä–µ–∑–∫–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –µ–≥–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è.
# –ú–µ—Ç–æ–¥ 1 - –º–µ—Ç–æ–¥ –ª–µ–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤. –ú–µ—Ç–æ–¥ 2 - –º–µ—Ç–æ–¥ –ø–∞—Ä–∞–±–æ–ª.


# –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è math –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π.
import math

# –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è tabulate –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–∞–±–ª–∏—Ü—ã.
from tabulate import tabulate # type: ignore

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≤–≤–æ–¥–∞.
def check_input(input_string):
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.
    if input_string.isdigit() or input_string == 0 or input_string.lstrip('-').isdigit():

        return int(input_string)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ.
    if '.' in input_string:
        parts = input_string.split('.')

        if len(parts) == 2 and parts[0].lstrip('-').isdigit() and parts[1].isdigit():

            return float(input_string)

    return None

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
a = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—É—é —Ç–æ—á–∫—É –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è: ")
while check_input(a) is None:
    print("–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º –∏–ª–∏ –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —á–∏—Å–ª–æ–º.")
    a = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—É—é —Ç–æ—á–∫—É –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è: ")

b = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é —Ç–æ—á–∫—É –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è: ")
while check_input(b) is None:
    print("–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º –∏–ª–∏ –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —á–∏—Å–ª–æ–º.")
    b = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é —Ç–æ—á–∫—É –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è: ")

while float(b) <= float(a):
    print("–ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω–∞—á–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–∏.")
    b = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é —Ç–æ—á–∫—É –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è: ")

N1 = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è N1: ")
while check_input(N1) is None or float(N1) <= 0 or float(N1) % 1 != 0:
    print("–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è N1 –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
    N1 = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è N1: ")

N2 = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è N2: ")
while check_input(N2) is None or float(N2) <= 0 or float(N2) % 1 != 0:
    print("–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è N2 –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
    N2 = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è N2: ")

eps = input("–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ—Å—Ç—å Œµ: ")
while check_input(eps) is None:
    print("–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –¢–æ—á–Ω–æ—Å—Ç—å Œµ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º –∏–ª–∏ –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —á–∏—Å–ª–æ–º.")
    eps = input("–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ—Å—Ç—å Œµ: ")

a = float(a)
b = float(b)

# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø—Ä–æ–∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å. (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é).
def f(x):
    return x * math.sin(x)

# –ü–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–∏ f(x). (–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–µ–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é, —Ç–æ —Ç–∞–∫–∂–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–º–µ–Ω—è—Ç—å –∏ –ø–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω—É—é).
def F(x):
    return -x * math.cos(x) + math.sin(x)

# –ú–µ—Ç–æ–¥ –ª–µ–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.
def left_rectangle(f, a, b, n):
    n = float(n)
    if n == 0:
        return None
    
    h = (b - a) / n
    integral = 0
    n = int(n)
    for i in range(n):
        x = a + i * h
        integral += f(x) * h
        
    return integral

# –ú–µ—Ç–æ–¥ –ø–∞—Ä–∞–±–æ–ª.
def parabola(f, a, b, n):
    n = float(n)
    if n % 2 != 0 or n < 2:
        return None
    
    h = (b - a) / n
    integral = f(a) + f(b)
    
    # –°–ª–∞–≥–∞–µ–º–æ–µ —Å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–º 4.
    n = int(n)
    for i in range(1, n, 2):
        x = a + i * h
        integral += 4 * f(x)
    
    # –°–ª–∞–≥–∞–µ–º–æ–µ —Å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–º 2.
    for i in range(2, n-1, 2):
        x = a + i * h
        integral += 2 * f(x)
    
    return integral * h / 3

# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞ —á–µ—Ä–µ–∑ –ø–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω—É—é.
def true_integral(F, a, b):
    return F(b) - F(a)

# –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ N.
N = 10

# –®–∞–≥ —É–≤–µ–ª–∏—á–µ–Ω–∏—è.
step = 2

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π.
iterations = 0

# –ë—É–ª–µ–≤–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ü–∏–∫–ª–∞.
continue_loop = True

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª.
while continue_loop:
    eps = float(eps)
    iterations += 1
    N_double = N * step
    
    I_N = left_rectangle(f, a, b, N)
    I_2N = left_rectangle(f, a, b, N_double)
    
    error = abs(I_N - I_2N)
    if error < eps:
        continue_loop = False
    else:
        N += step

# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞ –º–µ—Ç–æ–¥–æ–º –ª–µ–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.
I1 = left_rectangle(f, a, b, N1)
I2 = left_rectangle(f, a, b, N2)

# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞ –º–µ—Ç–æ–¥–æ–º –ø–∞—Ä–∞–±–æ–ª.
I3 = parabola(f, a, b, N1)
I4 = parabola(f, a, b, N2)

# –ò—Å—Ç–∏–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞.
true_value = true_integral(F, a, b)

# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.
data = [
    ["", N1, N2],
    ["–õ–µ–≤—ã–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏", I1, I2],
    ["–ü–∞—Ä–∞–±–æ–ª—ã", I3, I4]
]

# –í—ã–≤–æ–¥ —Ç–∞–±–ª–∏—Ü—ã.
print(tabulate(data, headers='firstrow', tablefmt="simple_grid", missingval='-', colalign=("center", "center", "center")))

# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏.
print(f"–¢–æ—á–Ω–æ—Å—Ç—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –∑–∞ {iterations} –∏—Ç–µ—Ä–∞—Ü–∏–π —Å N = {N}.")
print(f"–ü–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å: {error:.7f}")

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞.
print(f"\n–ò—Å—Ç–∏–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞: {true_value:.7f}")

# –ü–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏ –¥–ª—è –º–µ—Ç–æ–¥–∞ –ª–µ–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.
abs_error_I1 = abs(I1 - true_value) if I1 is not None else 0
rel_error_I1 = abs(abs_error_I1 / true_value) if true_value != 0 else 0
abs_error_I2 = abs(I2 - true_value) if I2 is not None else 0
rel_error_I2 = abs(abs_error_I2 / true_value) if true_value != 0 else 0

# –ü–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏ –¥–ª—è –º–µ—Ç–æ–¥–∞ –ø–∞—Ä–∞–±–æ–ª.
abs_error_I3 = abs(I3 - true_value) if I3 is not None else 0
rel_error_I3 = abs(abs_error_I3 / true_value) if true_value != 0 else 0
abs_error_I4 = abs(I4 - true_value) if I4 is not None else 0
rel_error_I4 = abs(abs_error_I4 / true_value) if true_value != 0 else 0

# –í—ã–≤–æ–¥ –≤—Å–µ—Ö –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–µ–π.
print("\n–ü–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏:")
print(f"–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –¥–ª—è –º–µ—Ç–æ–¥–∞ –ª–µ–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ —Å N1: {abs_error_I1:.7f}")
print(f"–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –¥–ª—è –º–µ—Ç–æ–¥–∞ –ª–µ–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ —Å N1: {rel_error_I1:.7f}")
print(f"–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –¥–ª—è –º–µ—Ç–æ–¥–∞ –ª–µ–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ —Å N2: {abs_error_I2:.7f}")
print(f"–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –¥–ª—è –º–µ—Ç–æ–¥–∞ –ª–µ–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ —Å N2: {rel_error_I2:.7f}")
print(f"–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –¥–ª—è –º–µ—Ç–æ–¥–∞ –ø–∞—Ä–∞–±–æ–ª —Å N1: {abs_error_I3:.7f}")
print(f"–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –¥–ª—è –º–µ—Ç–æ–¥–∞ –ø–∞—Ä–∞–±–æ–ª —Å N1: {rel_error_I3:.7f}")
print(f"–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –¥–ª—è –º–µ—Ç–æ–¥–∞ –ø–∞—Ä–∞–±–æ–ª —Å N2: {abs_error_I4:.7f}")
print(f"–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –¥–ª—è –º–µ—Ç–æ–¥–∞ –ø–∞—Ä–∞–±–æ–ª —Å N2: {rel_error_I4:.7f}")

# –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–∞–∏–º–µ–Ω—å—à–µ–π –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏ —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤.
min_rel_error = rel_error_I1

if rel_error_I2 < min_rel_error:
    min_rel_error = rel_error_I2

if rel_error_I3 < min_rel_error:
    min_rel_error = rel_error_I3

if rel_error_I4 < min_rel_error:
    min_rel_error = rel_error_I4

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ª—É—á—à–µ–≥–æ –º–µ—Ç–æ–¥–∞.
if min_rel_error == rel_error_I1:
    best_method = "–õ–µ–≤—ã–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏ —Å N1"
elif min_rel_error == rel_error_I2:
    best_method = "–õ–µ–≤—ã–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏ —Å N2"
elif min_rel_error == rel_error_I3:
    best_method = "–ü–∞—Ä–∞–±–æ–ª—ã —Å N1"
else:
    best_method = "–ü–∞—Ä–∞–±–æ–ª—ã —Å N2"

# –í—ã–≤–æ–¥ –ª—É—á—à–µ–≥–æ –º–µ—Ç–æ–¥–∞.
print(f"\n–ù–∞–∏–ª—É—á—à–∏–π –º–µ—Ç–æ–¥: {best_method}")